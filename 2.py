# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import sys

class Fibonacci(object):

    def __init__(self):
        self.cache = dict()

    def get(self, n):
        if n == 0 or n == 1:
            return 1
        if n in self.cache:
            return self.cache[n]
        result = self.get(n - 2) + self.get(n - 1)
        self.cache[n] = result
        return result

f = Fibonacci()
UPPER_BOUND = int(sys.argv[1])


i = 0
sum = 0
while True:
    fi = f.get(i)
    if fi > UPPER_BOUND:
        break
    if fi % 2 == 0:
        sum += fi
    i += 1
print sum
